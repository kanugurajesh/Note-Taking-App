{"version":3,"file":"react-split.min.js","sources":["../src/index.js"],"sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Split from 'split.js'\n\nclass SplitWrapper extends React.Component {\n    componentDidMount() {\n        const { children, gutter, ...options } = this.props\n\n        options.gutter = (index, direction) => {\n            let gutterElement\n\n            if (gutter) {\n                gutterElement = gutter(index, direction)\n            } else {\n                gutterElement = document.createElement('div')\n                gutterElement.className = `gutter gutter-${direction}`\n            }\n\n            // eslint-disable-next-line no-underscore-dangle\n            gutterElement.__isSplitGutter = true\n            return gutterElement\n        }\n\n        this.split = Split(this.parent.children, options)\n    }\n\n    componentDidUpdate(prevProps) {\n        const { children, minSize, sizes, collapsed, ...options } = this.props\n        const {\n            minSize: prevMinSize,\n            sizes: prevSizes,\n            collapsed: prevCollapsed,\n        } = prevProps\n\n        const otherProps = [\n            'maxSize',\n            'expandToMin',\n            'gutterSize',\n            'gutterAlign',\n            'snapOffset',\n            'dragInterval',\n            'direction',\n            'cursor',\n        ]\n\n        let needsRecreate = otherProps\n            // eslint-disable-next-line react/destructuring-assignment\n            .map(prop => this.props[prop] !== prevProps[prop])\n            .reduce((accum, same) => accum || same, false)\n\n        // Compare minSize when both are arrays, when one is an array and when neither is an array\n        if (Array.isArray(minSize) && Array.isArray(prevMinSize)) {\n            let minSizeChanged = false\n\n            minSize.forEach((minSizeI, i) => {\n                minSizeChanged = minSizeChanged || minSizeI !== prevMinSize[i]\n            })\n\n            needsRecreate = needsRecreate || minSizeChanged\n        } else if (Array.isArray(minSize) || Array.isArray(prevMinSize)) {\n            needsRecreate = true\n        } else {\n            needsRecreate = needsRecreate || minSize !== prevMinSize\n        }\n\n        // Destroy and re-create split if options changed\n        if (needsRecreate) {\n            options.minSize = minSize\n            options.sizes = sizes || this.split.getSizes()\n            this.split.destroy(true, true)\n            options.gutter = (index, direction, pairB) => pairB.previousSibling\n            this.split = Split(\n                Array.from(this.parent.children).filter(\n                    // eslint-disable-next-line no-underscore-dangle\n                    element => !element.__isSplitGutter,\n                ),\n                options,\n            )\n        } else if (sizes) {\n            // If only the size has changed, set the size. No need to do this if re-created.\n            let sizeChanged = false\n\n            sizes.forEach((sizeI, i) => {\n                sizeChanged = sizeChanged || sizeI !== prevSizes[i]\n            })\n\n            if (sizeChanged) {\n                // eslint-disable-next-line react/destructuring-assignment\n                this.split.setSizes(this.props.sizes)\n            }\n        }\n\n        // Collapse after re-created or when collapsed changed.\n        if (\n            Number.isInteger(collapsed) &&\n            (collapsed !== prevCollapsed || needsRecreate)\n        ) {\n            this.split.collapse(collapsed)\n        }\n    }\n\n    componentWillUnmount() {\n        this.split.destroy()\n        delete this.split\n    }\n\n    render() {\n        const {\n            sizes,\n            minSize,\n            maxSize,\n            expandToMin,\n            gutterSize,\n            gutterAlign,\n            snapOffset,\n            dragInterval,\n            direction,\n            cursor,\n            gutter,\n            elementStyle,\n            gutterStyle,\n            onDrag,\n            onDragStart,\n            onDragEnd,\n            collapsed,\n            children,\n            ...rest\n        } = this.props\n\n        return (\n            <div\n                ref={parent => {\n                    this.parent = parent\n                }}\n                {...rest}\n            >\n                {children}\n            </div>\n        )\n    }\n}\n\nSplitWrapper.propTypes = {\n    sizes: PropTypes.arrayOf(PropTypes.number),\n    minSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number),\n    ]),\n    maxSize: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number),\n    ]),\n    expandToMin: PropTypes.bool,\n    gutterSize: PropTypes.number,\n    gutterAlign: PropTypes.string,\n    snapOffset: PropTypes.oneOfType([\n        PropTypes.number,\n        PropTypes.arrayOf(PropTypes.number),\n    ]),\n    dragInterval: PropTypes.number,\n    direction: PropTypes.string,\n    cursor: PropTypes.string,\n    gutter: PropTypes.func,\n    elementStyle: PropTypes.func,\n    gutterStyle: PropTypes.func,\n    onDrag: PropTypes.func,\n    onDragStart: PropTypes.func,\n    onDragEnd: PropTypes.func,\n    collapsed: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.element),\n}\n\nSplitWrapper.defaultProps = {\n    sizes: undefined,\n    minSize: undefined,\n    maxSize: undefined,\n    expandToMin: undefined,\n    gutterSize: undefined,\n    gutterAlign: undefined,\n    snapOffset: undefined,\n    dragInterval: undefined,\n    direction: undefined,\n    cursor: undefined,\n    gutter: undefined,\n    elementStyle: undefined,\n    gutterStyle: undefined,\n    onDrag: undefined,\n    onDragStart: undefined,\n    onDragEnd: undefined,\n    collapsed: undefined,\n    children: undefined,\n}\n\nexport default SplitWrapper\n"],"names":["SplitWrapper","componentDidMount","this","props","options","gutter","index","direction","let","gutterElement","document","createElement","className","__isSplitGutter","split","Split","parent","children","componentDidUpdate","prevProps","needsRecreate","map","prop","reduce","accum","same","Array","isArray","minSize","prevMinSize","minSizeChanged","forEach","minSizeI","i","sizes","getSizes","destroy","pairB","previousSibling","from","filter","element","sizeChanged","sizeI","prevSizes","setSizes","Number","isInteger","collapsed","prevCollapsed","collapse","componentWillUnmount","render","React","ref","rest","Component","propTypes","PropTypes","arrayOf","number","oneOfType","maxSize","expandToMin","bool","gutterSize","gutterAlign","string","snapOffset","dragInterval","cursor","func","elementStyle","gutterStyle","onDrag","onDragStart","onDragEnd","defaultProps","undefined"],"mappings":";ukBAIMA,6JACFC,mCAC6CC,KAAKC,iBAA5B,4CAElBC,EAAQC,gBAAUC,EAAOC,GACrBC,IAAIC,EAWJ,OATIJ,EACAI,EAAgBJ,EAAOC,EAAOC,IAE9BE,EAAgBC,SAASC,cAAc,QACzBC,UAAY,iBAAiBL,EAI/CE,EAAcI,iBAAkB,EACzBJ,GAGXP,KAAKY,MAAQC,UAAMb,KAAKc,OAAOC,SAAUb,gBAG7Cc,4BAAmBC,gBAC6CjB,KAAKC,iBAA/C,8HAkBdiB,EAXe,CACf,UACA,cACA,aACA,cACA,aACA,eACA,YACA,UAKCC,cAAIC,UAAQpB,EAAKC,MAAMmB,KAAUH,EAAUG,MAC3CC,iBAAQC,EAAOC,UAASD,GAASC,KAAM,GAG5C,GAAIC,MAAMC,QAAQC,IAAYF,MAAMC,QAAQE,GAAc,CACtDrB,IAAIsB,GAAiB,EAErBF,EAAQG,kBAASC,EAAUC,GACvBH,EAAiBA,GAAkBE,IAAaH,EAAYI,MAGhEb,EAAgBA,GAAiBU,OAEjCV,KADOM,MAAMC,QAAQC,KAAYF,MAAMC,QAAQE,MAG/BT,GAAiBQ,IAAYC,GAIjD,GAAIT,EACAhB,EAAQwB,QAAUA,EAClBxB,EAAQ8B,MAAQA,GAAShC,KAAKY,MAAMqB,WACpCjC,KAAKY,MAAMsB,SAAQ,GAAM,GACzBhC,EAAQC,gBAAUC,EAAOC,EAAW8B,UAAUA,EAAMC,iBACpDpC,KAAKY,MAAQC,UACTW,MAAMa,KAAKrC,KAAKc,OAAOC,UAAUuB,iBAE7BC,UAAYA,EAAQ5B,mBAExBT,QAED,GAAI8B,EAAO,CAEd1B,IAAIkC,GAAc,EAElBR,EAAMH,kBAASY,EAAOV,GAClBS,EAAcA,GAAeC,IAAUC,EAAUX,MAGjDS,GAEAxC,KAAKY,MAAM+B,SAAS3C,KAAKC,MAAM+B,OAMnCY,OAAOC,UAAUC,KAChBA,IAAcC,GAAiB7B,IAEhClB,KAAKY,MAAMoC,SAASF,gBAI5BG,gCACIjD,KAAKY,MAAMsB,iBACJlC,KAAKY,mBAGhBsC,+BAqBQlD,KAAKC,iNAFL,gPAIJ,OACIkD,gDACIC,aAAKtC,GACDd,EAAKc,OAASA,IAEduC,GAEHtC,OApIUoC,UAAMG,kBA0IjCxD,EAAayD,UAAY,CACrBvB,MAAOwB,UAAUC,QAAQD,UAAUE,QACnChC,QAAS8B,UAAUG,UAAU,CACzBH,UAAUE,OACVF,UAAUC,QAAQD,UAAUE,UAEhCE,QAASJ,UAAUG,UAAU,CACzBH,UAAUE,OACVF,UAAUC,QAAQD,UAAUE,UAEhCG,YAAaL,UAAUM,KACvBC,WAAYP,UAAUE,OACtBM,YAAaR,UAAUS,OACvBC,WAAYV,UAAUG,UAAU,CAC5BH,UAAUE,OACVF,UAAUC,QAAQD,UAAUE,UAEhCS,aAAcX,UAAUE,OACxBrD,UAAWmD,UAAUS,OACrBG,OAAQZ,UAAUS,OAClB9D,OAAQqD,UAAUa,KAClBC,aAAcd,UAAUa,KACxBE,YAAaf,UAAUa,KACvBG,OAAQhB,UAAUa,KAClBI,YAAajB,UAAUa,KACvBK,UAAWlB,UAAUa,KACrBvB,UAAWU,UAAUE,OACrB3C,SAAUyC,UAAUC,QAAQD,UAAUjB,UAG1CzC,EAAa6E,aAAe,CACxB3C,WAAO4C,EACPlD,aAASkD,EACThB,aAASgB,EACTf,iBAAae,EACbb,gBAAYa,EACZZ,iBAAaY,EACbV,gBAAYU,EACZT,kBAAcS,EACdvE,eAAWuE,EACXR,YAAQQ,EACRzE,YAAQyE,EACRN,kBAAcM,EACdL,iBAAaK,EACbJ,YAAQI,EACRH,iBAAaG,EACbF,eAAWE,EACX9B,eAAW8B,EACX7D,cAAU6D"}